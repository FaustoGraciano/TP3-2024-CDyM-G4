
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  000009f4  00000a88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800152  00800152  00000ada  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ada  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b38  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00000b78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001319  00000000  00000000  00000cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b35  00000000  00000000  00002009  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b60  00000000  00000000  00002b3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000035c  00000000  00000000  000036a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c3  00000000  00000000  000039fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007a0  00000000  00000000  000040bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  0000485f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 4e 01 	jmp	0x29c	; 0x29c <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ef       	ldi	r30, 0xF4	; 244
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 35       	cpi	r26, 0x52	; 82
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e5       	ldi	r26, 0x52	; 82
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 35       	cpi	r26, 0x5B	; 91
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 59 00 	call	0xb2	; 0xb2 <main>
  9e:	0c 94 f8 04 	jmp	0x9f0	; 0x9f0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <getHumedad>:
	}
}

uint8_t getHumedad() {
	return humedad;
}
  a6:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <humedad>
  aa:	08 95       	ret

000000ac <getTemperatura>:

uint8_t getTemperatura() {
	return temperatura;
  ac:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end>
  b0:	08 95       	ret

000000b2 <main>:
char hora[];
volatile uint8_t suspendFlag = 0; // Bandera de suspensión
int main(void)
{ 
	int result=0;
    configurarTimer1();
  b2:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <configurarTimer1>
	SerialPort_Init(BR9600); 
  b6:	87 e6       	ldi	r24, 0x67	; 103
  b8:	0e 94 69 01 	call	0x2d2	; 0x2d2 <SerialPort_Init>
	SerialPort_TX_Enable();		// Inicializo formato 8N1 y BAUDRATE = 9600bps
  bc:	0e 94 73 01 	call	0x2e6	; 0x2e6 <SerialPort_TX_Enable>
	SerialPort_RX_Enable();			// Activo el Receptor del Puerto Serie
  c0:	0e 94 79 01 	call	0x2f2	; 0x2f2 <SerialPort_RX_Enable>
	SerialPort_RX_Interrupt_Enable();
  c4:	0e 94 7f 01 	call	0x2fe	; 0x2fe <SerialPort_RX_Interrupt_Enable>
	sei();								// Activo la mascara global de interrupciones (Bit I del SREG en 1)
  c8:	78 94       	sei
    while(1){ 
	if(!suspendFlag) {		
  ca:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <suspendFlag>
  ce:	81 11       	cpse	r24, r1
  d0:	fc cf       	rjmp	.-8      	; 0xca <main+0x18>
		DDRC|=(1<<PINC0);
  d2:	87 b1       	in	r24, 0x07	; 7
  d4:	81 60       	ori	r24, 0x01	; 1
  d6:	87 b9       	out	0x07, r24	; 7
		PORTC&=(0<<PINC0);
  d8:	88 b1       	in	r24, 0x08	; 8
  da:	18 b8       	out	0x08, r1	; 8
		//inicializarContadores();
		//while(chequeoFlag1()!=1){
			
		//}
		//cli();
		DDRC&=(0<<PINC0);
  dc:	87 b1       	in	r24, 0x07	; 7
  de:	17 b8       	out	0x07, r1	; 7
		PORTC|=(1<<PINC0);
  e0:	88 b1       	in	r24, 0x08	; 8
  e2:	81 60       	ori	r24, 0x01	; 1
  e4:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e6:	85 ed       	ldi	r24, 0xD5	; 213
  e8:	8a 95       	dec	r24
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x36>
  ec:	00 00       	nop
		_delay_us(40);
		//result = LeerDHT(PINC0);
		//  if (result == DHTLIB_OK) {
			RTC_GetDateTime(fecha, hora);
  ee:	69 e5       	ldi	r22, 0x59	; 89
  f0:	71 e0       	ldi	r23, 0x01	; 1
  f2:	8a e5       	ldi	r24, 0x5A	; 90
  f4:	91 e0       	ldi	r25, 0x01	; 1
  f6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <RTC_GetDateTime>
			  SerialPort_Send_String(msg1);
  fa:	88 e1       	ldi	r24, 0x18	; 24
  fc:	91 e0       	ldi	r25, 0x01	; 1
  fe:	0e 94 8d 01 	call	0x31a	; 0x31a <SerialPort_Send_String>
			  SerialPort_Send_uint8_t(getHumedad());
 102:	0e 94 53 00 	call	0xa6	; 0xa6 <getHumedad>
 106:	0e 94 a9 01 	call	0x352	; 0x352 <SerialPort_Send_uint8_t>
			  SerialPort_Send_String(msg2);
 10a:	84 e1       	ldi	r24, 0x14	; 20
 10c:	91 e0       	ldi	r25, 0x01	; 1
 10e:	0e 94 8d 01 	call	0x31a	; 0x31a <SerialPort_Send_String>
			  SerialPort_Send_String(msg3);	
 112:	85 e0       	ldi	r24, 0x05	; 5
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	0e 94 8d 01 	call	0x31a	; 0x31a <SerialPort_Send_String>
			  SerialPort_Send_uint8_t(getTemperatura());
 11a:	0e 94 56 00 	call	0xac	; 0xac <getTemperatura>
 11e:	0e 94 a9 01 	call	0x352	; 0x352 <SerialPort_Send_uint8_t>
			  SerialPort_Send_String(msg4);
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	91 e0       	ldi	r25, 0x01	; 1
 126:	0e 94 8d 01 	call	0x31a	; 0x31a <SerialPort_Send_String>
			   SerialPort_Send_String(" FECHA: ");
 12a:	83 e2       	ldi	r24, 0x23	; 35
 12c:	91 e0       	ldi	r25, 0x01	; 1
 12e:	0e 94 8d 01 	call	0x31a	; 0x31a <SerialPort_Send_String>
			   SerialPort_Send_String(fecha);
 132:	8a e5       	ldi	r24, 0x5A	; 90
 134:	91 e0       	ldi	r25, 0x01	; 1
 136:	0e 94 8d 01 	call	0x31a	; 0x31a <SerialPort_Send_String>
			   SerialPort_Send_String(" HORA: ");
 13a:	8c e2       	ldi	r24, 0x2C	; 44
 13c:	91 e0       	ldi	r25, 0x01	; 1
 13e:	0e 94 8d 01 	call	0x31a	; 0x31a <SerialPort_Send_String>
			   SerialPort_Send_String(hora);
 142:	89 e5       	ldi	r24, 0x59	; 89
 144:	91 e0       	ldi	r25, 0x01	; 1
 146:	0e 94 8d 01 	call	0x31a	; 0x31a <SerialPort_Send_String>
		//	  } else {
			  ("Error: ");
		 // }
		  sei();
 14a:	78 94       	sei
 14c:	be cf       	rjmp	.-132    	; 0xca <main+0x18>

0000014e <bcdToDec>:
static void I2C_Write(uint8_t data);
static uint8_t I2C_ReadAck(void);
static uint8_t I2C_ReadNack(void);

void RTC_Init(void) {
	I2C_Init();
 14e:	98 2f       	mov	r25, r24
 150:	92 95       	swap	r25
 152:	9f 70       	andi	r25, 0x0F	; 15
 154:	99 0f       	add	r25, r25
 156:	29 2f       	mov	r18, r25
 158:	22 0f       	add	r18, r18
 15a:	22 0f       	add	r18, r18
 15c:	92 0f       	add	r25, r18
 15e:	8f 70       	andi	r24, 0x0F	; 15
 160:	89 0f       	add	r24, r25
 162:	08 95       	ret

00000164 <I2C_Start>:
 164:	84 ea       	ldi	r24, 0xA4	; 164
 166:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 16a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 16e:	88 23       	and	r24, r24
 170:	e4 f7       	brge	.-8      	; 0x16a <I2C_Start+0x6>
 172:	08 95       	ret

00000174 <I2C_Stop>:
 174:	84 e9       	ldi	r24, 0x94	; 148
 176:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 17e:	84 fd       	sbrc	r24, 4
 180:	fc cf       	rjmp	.-8      	; 0x17a <I2C_Stop+0x6>
 182:	08 95       	ret

00000184 <I2C_Write>:
 184:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 188:	84 e8       	ldi	r24, 0x84	; 132
 18a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 18e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 192:	88 23       	and	r24, r24
 194:	e4 f7       	brge	.-8      	; 0x18e <I2C_Write+0xa>
 196:	08 95       	ret

00000198 <I2C_ReadAck>:
 198:	84 ec       	ldi	r24, 0xC4	; 196
 19a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 19e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1a2:	88 23       	and	r24, r24
 1a4:	e4 f7       	brge	.-8      	; 0x19e <I2C_ReadAck+0x6>
 1a6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 1aa:	08 95       	ret

000001ac <I2C_ReadNack>:
 1ac:	84 e8       	ldi	r24, 0x84	; 132
 1ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1b6:	88 23       	and	r24, r24
 1b8:	e4 f7       	brge	.-8      	; 0x1b2 <I2C_ReadNack+0x6>
 1ba:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 1be:	08 95       	ret

000001c0 <RTC_GetDateTime>:
}

void RTC_GetDateTime(char* dateStr, char* timeStr) {
 1c0:	af 92       	push	r10
 1c2:	bf 92       	push	r11
 1c4:	cf 92       	push	r12
 1c6:	df 92       	push	r13
 1c8:	ef 92       	push	r14
 1ca:	ff 92       	push	r15
 1cc:	0f 93       	push	r16
 1ce:	1f 93       	push	r17
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	e8 2e       	mov	r14, r24
 1d6:	d9 2e       	mov	r13, r25
 1d8:	c6 2f       	mov	r28, r22
 1da:	d7 2f       	mov	r29, r23
	I2C_Start();
 1dc:	0e 94 b2 00 	call	0x164	; 0x164 <I2C_Start>
	I2C_Write((DS3231_ADDRESS << 1) | TW_WRITE);
 1e0:	80 ed       	ldi	r24, 0xD0	; 208
 1e2:	0e 94 c2 00 	call	0x184	; 0x184 <I2C_Write>
	I2C_Write(0x00); // Dirección de registro de segundos
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	0e 94 c2 00 	call	0x184	; 0x184 <I2C_Write>
	I2C_Stop();
 1ec:	0e 94 ba 00 	call	0x174	; 0x174 <I2C_Stop>

	I2C_Start();
 1f0:	0e 94 b2 00 	call	0x164	; 0x164 <I2C_Start>
	I2C_Write((DS3231_ADDRESS << 1) | TW_READ);
 1f4:	81 ed       	ldi	r24, 0xD1	; 209
 1f6:	0e 94 c2 00 	call	0x184	; 0x184 <I2C_Write>
	uint8_t seconds = bcdToDec(I2C_ReadAck());
 1fa:	0e 94 cc 00 	call	0x198	; 0x198 <I2C_ReadAck>
 1fe:	0e 94 a7 00 	call	0x14e	; 0x14e <bcdToDec>
 202:	f8 2e       	mov	r15, r24
	uint8_t minutes = bcdToDec(I2C_ReadAck());
 204:	0e 94 cc 00 	call	0x198	; 0x198 <I2C_ReadAck>
 208:	0e 94 a7 00 	call	0x14e	; 0x14e <bcdToDec>
 20c:	08 2f       	mov	r16, r24
	uint8_t hours = bcdToDec(I2C_ReadAck());
 20e:	0e 94 cc 00 	call	0x198	; 0x198 <I2C_ReadAck>
 212:	0e 94 a7 00 	call	0x14e	; 0x14e <bcdToDec>
 216:	18 2f       	mov	r17, r24
	I2C_ReadAck(); // Día de la semana (ignorado)
 218:	0e 94 cc 00 	call	0x198	; 0x198 <I2C_ReadAck>
	uint8_t day = bcdToDec(I2C_ReadAck());
 21c:	0e 94 cc 00 	call	0x198	; 0x198 <I2C_ReadAck>
 220:	0e 94 a7 00 	call	0x14e	; 0x14e <bcdToDec>
 224:	c8 2e       	mov	r12, r24
	uint8_t month = bcdToDec(I2C_ReadAck());
 226:	0e 94 cc 00 	call	0x198	; 0x198 <I2C_ReadAck>
 22a:	0e 94 a7 00 	call	0x14e	; 0x14e <bcdToDec>
 22e:	b8 2e       	mov	r11, r24
	uint8_t year = bcdToDec(I2C_ReadNack());
 230:	0e 94 d6 00 	call	0x1ac	; 0x1ac <I2C_ReadNack>
 234:	0e 94 a7 00 	call	0x14e	; 0x14e <bcdToDec>
 238:	a8 2e       	mov	r10, r24
	I2C_Stop();
 23a:	0e 94 ba 00 	call	0x174	; 0x174 <I2C_Stop>

	sprintf(dateStr, "%02d/%02d/%02d", day, month, year);
 23e:	1f 92       	push	r1
 240:	af 92       	push	r10
 242:	1f 92       	push	r1
 244:	bf 92       	push	r11
 246:	1f 92       	push	r1
 248:	cf 92       	push	r12
 24a:	84 e3       	ldi	r24, 0x34	; 52
 24c:	91 e0       	ldi	r25, 0x01	; 1
 24e:	9f 93       	push	r25
 250:	8f 93       	push	r24
 252:	df 92       	push	r13
 254:	ef 92       	push	r14
 256:	0e 94 0e 02 	call	0x41c	; 0x41c <sprintf>
	sprintf(timeStr, "%02d:%02d:%02d", hours, minutes, seconds);
 25a:	1f 92       	push	r1
 25c:	ff 92       	push	r15
 25e:	1f 92       	push	r1
 260:	0f 93       	push	r16
 262:	1f 92       	push	r1
 264:	1f 93       	push	r17
 266:	83 e4       	ldi	r24, 0x43	; 67
 268:	91 e0       	ldi	r25, 0x01	; 1
 26a:	9f 93       	push	r25
 26c:	8f 93       	push	r24
 26e:	df 93       	push	r29
 270:	cf 93       	push	r28
 272:	0e 94 0e 02 	call	0x41c	; 0x41c <sprintf>
}
 276:	8d b7       	in	r24, 0x3d	; 61
 278:	9e b7       	in	r25, 0x3e	; 62
 27a:	44 96       	adiw	r24, 0x14	; 20
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	f8 94       	cli
 280:	9e bf       	out	0x3e, r25	; 62
 282:	0f be       	out	0x3f, r0	; 63
 284:	8d bf       	out	0x3d, r24	; 61
 286:	df 91       	pop	r29
 288:	cf 91       	pop	r28
 28a:	1f 91       	pop	r17
 28c:	0f 91       	pop	r16
 28e:	ff 90       	pop	r15
 290:	ef 90       	pop	r14
 292:	df 90       	pop	r13
 294:	cf 90       	pop	r12
 296:	bf 90       	pop	r11
 298:	af 90       	pop	r10
 29a:	08 95       	ret

0000029c <__vector_18>:
}


char SerialPort_Recive_Data(void){
	return UDR0;
}
 29c:	1f 92       	push	r1
 29e:	0f 92       	push	r0
 2a0:	0f b6       	in	r0, 0x3f	; 63
 2a2:	0f 92       	push	r0
 2a4:	11 24       	eor	r1, r1
 2a6:	8f 93       	push	r24
 2a8:	9f 93       	push	r25
 2aa:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 2ae:	83 37       	cpi	r24, 0x73	; 115
 2b0:	11 f0       	breq	.+4      	; 0x2b6 <__vector_18+0x1a>
 2b2:	83 35       	cpi	r24, 0x53	; 83
 2b4:	39 f4       	brne	.+14     	; 0x2c4 <__vector_18+0x28>
 2b6:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <suspendFlag>
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	91 11       	cpse	r25, r1
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <suspendFlag>
 2c4:	9f 91       	pop	r25
 2c6:	8f 91       	pop	r24
 2c8:	0f 90       	pop	r0
 2ca:	0f be       	out	0x3f, r0	; 63
 2cc:	0f 90       	pop	r0
 2ce:	1f 90       	pop	r1
 2d0:	18 95       	reti

000002d2 <SerialPort_Init>:
 2d2:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 2d6:	96 e0       	ldi	r25, 0x06	; 6
 2d8:	90 93 c2 00 	sts	0x00C2, r25	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 2dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 2e0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 2e4:	08 95       	ret

000002e6 <SerialPort_TX_Enable>:
 2e6:	e1 ec       	ldi	r30, 0xC1	; 193
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	88 60       	ori	r24, 0x08	; 8
 2ee:	80 83       	st	Z, r24
 2f0:	08 95       	ret

000002f2 <SerialPort_RX_Enable>:
 2f2:	e1 ec       	ldi	r30, 0xC1	; 193
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	80 81       	ld	r24, Z
 2f8:	80 61       	ori	r24, 0x10	; 16
 2fa:	80 83       	st	Z, r24
 2fc:	08 95       	ret

000002fe <SerialPort_RX_Interrupt_Enable>:
 2fe:	e1 ec       	ldi	r30, 0xC1	; 193
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	80 81       	ld	r24, Z
 304:	80 68       	ori	r24, 0x80	; 128
 306:	80 83       	st	Z, r24
 308:	08 95       	ret

0000030a <SerialPort_Wait_For_TX_Buffer_Free>:
 30a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 30e:	85 ff       	sbrs	r24, 5
 310:	fc cf       	rjmp	.-8      	; 0x30a <SerialPort_Wait_For_TX_Buffer_Free>
 312:	08 95       	ret

00000314 <SerialPort_Send_Data>:
 314:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 318:	08 95       	ret

0000031a <SerialPort_Send_String>:
 31a:	ef 92       	push	r14
 31c:	ff 92       	push	r15
 31e:	0f 93       	push	r16
 320:	1f 93       	push	r17
 322:	cf 93       	push	r28
 324:	7c 01       	movw	r14, r24
 326:	c0 e0       	ldi	r28, 0x00	; 0
 328:	07 c0       	rjmp	.+14     	; 0x338 <SerialPort_Send_String+0x1e>
 32a:	0e 94 85 01 	call	0x30a	; 0x30a <SerialPort_Wait_For_TX_Buffer_Free>
 32e:	f8 01       	movw	r30, r16
 330:	80 81       	ld	r24, Z
 332:	0e 94 8a 01 	call	0x314	; 0x314 <SerialPort_Send_Data>
 336:	cf 5f       	subi	r28, 0xFF	; 255
 338:	87 01       	movw	r16, r14
 33a:	0c 0f       	add	r16, r28
 33c:	11 1d       	adc	r17, r1
 33e:	f8 01       	movw	r30, r16
 340:	80 81       	ld	r24, Z
 342:	81 11       	cpse	r24, r1
 344:	f2 cf       	rjmp	.-28     	; 0x32a <SerialPort_Send_String+0x10>
 346:	cf 91       	pop	r28
 348:	1f 91       	pop	r17
 34a:	0f 91       	pop	r16
 34c:	ff 90       	pop	r15
 34e:	ef 90       	pop	r14
 350:	08 95       	ret

00000352 <SerialPort_Send_uint8_t>:


void SerialPort_Send_uint8_t(uint8_t num){
 352:	cf 93       	push	r28
 354:	df 93       	push	r29
 356:	d8 2f       	mov	r29, r24
	
	SerialPort_Wait_For_TX_Buffer_Free();
 358:	0e 94 85 01 	call	0x30a	; 0x30a <SerialPort_Wait_For_TX_Buffer_Free>
	SerialPort_Send_Data('0'+num/100);
 35c:	89 e2       	ldi	r24, 0x29	; 41
 35e:	d8 9f       	mul	r29, r24
 360:	81 2d       	mov	r24, r1
 362:	11 24       	eor	r1, r1
 364:	82 95       	swap	r24
 366:	8f 70       	andi	r24, 0x0F	; 15
 368:	80 5d       	subi	r24, 0xD0	; 208
 36a:	0e 94 8a 01 	call	0x314	; 0x314 <SerialPort_Send_Data>
	
	num-=100;
 36e:	d4 56       	subi	r29, 0x64	; 100
	
	SerialPort_Wait_For_TX_Buffer_Free();
 370:	0e 94 85 01 	call	0x30a	; 0x30a <SerialPort_Wait_For_TX_Buffer_Free>
	SerialPort_Send_Data('0'+num/10);
 374:	cd ec       	ldi	r28, 0xCD	; 205
 376:	dc 9f       	mul	r29, r28
 378:	c1 2d       	mov	r28, r1
 37a:	11 24       	eor	r1, r1
 37c:	c6 95       	lsr	r28
 37e:	c6 95       	lsr	r28
 380:	c6 95       	lsr	r28
 382:	80 e3       	ldi	r24, 0x30	; 48
 384:	8c 0f       	add	r24, r28
 386:	0e 94 8a 01 	call	0x314	; 0x314 <SerialPort_Send_Data>
	
	SerialPort_Wait_For_TX_Buffer_Free();
 38a:	0e 94 85 01 	call	0x30a	; 0x30a <SerialPort_Wait_For_TX_Buffer_Free>
	SerialPort_Send_Data('0'+ num%10);
 38e:	cc 0f       	add	r28, r28
 390:	8c 2f       	mov	r24, r28
 392:	88 0f       	add	r24, r24
 394:	88 0f       	add	r24, r24
 396:	c8 0f       	add	r28, r24
 398:	8d 2f       	mov	r24, r29
 39a:	8c 1b       	sub	r24, r28
 39c:	80 5d       	subi	r24, 0xD0	; 208
 39e:	0e 94 8a 01 	call	0x314	; 0x314 <SerialPort_Send_Data>
}
 3a2:	df 91       	pop	r29
 3a4:	cf 91       	pop	r28
 3a6:	08 95       	ret

000003a8 <configurarTimer1>:
			Flag_MEF=0;
			return 1;
		}
		else return 0;
	
	}
 3a8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 3ac:	e1 e8       	ldi	r30, 0x81	; 129
 3ae:	f0 e0       	ldi	r31, 0x00	; 0
 3b0:	80 81       	ld	r24, Z
 3b2:	8b 60       	ori	r24, 0x0B	; 11
 3b4:	80 83       	st	Z, r24
 3b6:	89 ef       	ldi	r24, 0xF9	; 249
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 3be:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 3c2:	ef e6       	ldi	r30, 0x6F	; 111
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	80 81       	ld	r24, Z
 3c8:	82 60       	ori	r24, 0x02	; 2
 3ca:	80 83       	st	Z, r24
 3cc:	78 94       	sei
 3ce:	08 95       	ret

000003d0 <__vector_11>:

	ISR(TIMER1_COMPA_vect) {
 3d0:	1f 92       	push	r1
 3d2:	0f 92       	push	r0
 3d4:	0f b6       	in	r0, 0x3f	; 63
 3d6:	0f 92       	push	r0
 3d8:	11 24       	eor	r1, r1
 3da:	8f 93       	push	r24
 3dc:	9f 93       	push	r25
		countMEF++;    //Incremento del contador para la Flag
 3de:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <countMEF>
 3e2:	9f 5f       	subi	r25, 0xFF	; 255
 3e4:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <countMEF>
		count2++;
 3e8:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <count2>
 3ec:	8f 5f       	subi	r24, 0xFF	; 255
 3ee:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <count2>
		if(countMEF == 20){		//cada 10 interrupciones se activa el FLAG de chequeo de MEF
 3f2:	94 31       	cpi	r25, 0x14	; 20
 3f4:	29 f4       	brne	.+10     	; 0x400 <__EEPROM_REGION_LENGTH__>
			Flag_MEF = 1;
 3f6:	91 e0       	ldi	r25, 0x01	; 1
 3f8:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <Flag_MEF>
			countMEF = 0;
 3fc:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <countMEF>
		}
		if(count2==200){
 400:	88 3c       	cpi	r24, 0xC8	; 200
 402:	29 f4       	brne	.+10     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
			Flag_tiempo=1;
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <Flag_tiempo>
			count2=0;
 40a:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <count2>
		}
	}
 40e:	9f 91       	pop	r25
 410:	8f 91       	pop	r24
 412:	0f 90       	pop	r0
 414:	0f be       	out	0x3f, r0	; 63
 416:	0f 90       	pop	r0
 418:	1f 90       	pop	r1
 41a:	18 95       	reti

0000041c <sprintf>:
 41c:	ae e0       	ldi	r26, 0x0E	; 14
 41e:	b0 e0       	ldi	r27, 0x00	; 0
 420:	e4 e1       	ldi	r30, 0x14	; 20
 422:	f2 e0       	ldi	r31, 0x02	; 2
 424:	0c 94 cf 04 	jmp	0x99e	; 0x99e <__prologue_saves__+0x1c>
 428:	0d 89       	ldd	r16, Y+21	; 0x15
 42a:	1e 89       	ldd	r17, Y+22	; 0x16
 42c:	86 e0       	ldi	r24, 0x06	; 6
 42e:	8c 83       	std	Y+4, r24	; 0x04
 430:	1a 83       	std	Y+2, r17	; 0x02
 432:	09 83       	std	Y+1, r16	; 0x01
 434:	8f ef       	ldi	r24, 0xFF	; 255
 436:	9f e7       	ldi	r25, 0x7F	; 127
 438:	9e 83       	std	Y+6, r25	; 0x06
 43a:	8d 83       	std	Y+5, r24	; 0x05
 43c:	ae 01       	movw	r20, r28
 43e:	47 5e       	subi	r20, 0xE7	; 231
 440:	5f 4f       	sbci	r21, 0xFF	; 255
 442:	6f 89       	ldd	r22, Y+23	; 0x17
 444:	78 8d       	ldd	r23, Y+24	; 0x18
 446:	ce 01       	movw	r24, r28
 448:	01 96       	adiw	r24, 0x01	; 1
 44a:	0e 94 30 02 	call	0x460	; 0x460 <vfprintf>
 44e:	ef 81       	ldd	r30, Y+7	; 0x07
 450:	f8 85       	ldd	r31, Y+8	; 0x08
 452:	e0 0f       	add	r30, r16
 454:	f1 1f       	adc	r31, r17
 456:	10 82       	st	Z, r1
 458:	2e 96       	adiw	r28, 0x0e	; 14
 45a:	e4 e0       	ldi	r30, 0x04	; 4
 45c:	0c 94 eb 04 	jmp	0x9d6	; 0x9d6 <__epilogue_restores__+0x1c>

00000460 <vfprintf>:
 460:	ab e0       	ldi	r26, 0x0B	; 11
 462:	b0 e0       	ldi	r27, 0x00	; 0
 464:	e6 e3       	ldi	r30, 0x36	; 54
 466:	f2 e0       	ldi	r31, 0x02	; 2
 468:	0c 94 c1 04 	jmp	0x982	; 0x982 <__prologue_saves__>
 46c:	6c 01       	movw	r12, r24
 46e:	7b 01       	movw	r14, r22
 470:	8a 01       	movw	r16, r20
 472:	fc 01       	movw	r30, r24
 474:	17 82       	std	Z+7, r1	; 0x07
 476:	16 82       	std	Z+6, r1	; 0x06
 478:	83 81       	ldd	r24, Z+3	; 0x03
 47a:	81 ff       	sbrs	r24, 1
 47c:	cc c1       	rjmp	.+920    	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 47e:	ce 01       	movw	r24, r28
 480:	01 96       	adiw	r24, 0x01	; 1
 482:	3c 01       	movw	r6, r24
 484:	f6 01       	movw	r30, r12
 486:	93 81       	ldd	r25, Z+3	; 0x03
 488:	f7 01       	movw	r30, r14
 48a:	93 fd       	sbrc	r25, 3
 48c:	85 91       	lpm	r24, Z+
 48e:	93 ff       	sbrs	r25, 3
 490:	81 91       	ld	r24, Z+
 492:	7f 01       	movw	r14, r30
 494:	88 23       	and	r24, r24
 496:	09 f4       	brne	.+2      	; 0x49a <vfprintf+0x3a>
 498:	ba c1       	rjmp	.+884    	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 49a:	85 32       	cpi	r24, 0x25	; 37
 49c:	39 f4       	brne	.+14     	; 0x4ac <vfprintf+0x4c>
 49e:	93 fd       	sbrc	r25, 3
 4a0:	85 91       	lpm	r24, Z+
 4a2:	93 ff       	sbrs	r25, 3
 4a4:	81 91       	ld	r24, Z+
 4a6:	7f 01       	movw	r14, r30
 4a8:	85 32       	cpi	r24, 0x25	; 37
 4aa:	29 f4       	brne	.+10     	; 0x4b6 <vfprintf+0x56>
 4ac:	b6 01       	movw	r22, r12
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 27 04 	call	0x84e	; 0x84e <fputc>
 4b4:	e7 cf       	rjmp	.-50     	; 0x484 <vfprintf+0x24>
 4b6:	91 2c       	mov	r9, r1
 4b8:	21 2c       	mov	r2, r1
 4ba:	31 2c       	mov	r3, r1
 4bc:	ff e1       	ldi	r31, 0x1F	; 31
 4be:	f3 15       	cp	r31, r3
 4c0:	d8 f0       	brcs	.+54     	; 0x4f8 <vfprintf+0x98>
 4c2:	8b 32       	cpi	r24, 0x2B	; 43
 4c4:	79 f0       	breq	.+30     	; 0x4e4 <vfprintf+0x84>
 4c6:	38 f4       	brcc	.+14     	; 0x4d6 <vfprintf+0x76>
 4c8:	80 32       	cpi	r24, 0x20	; 32
 4ca:	79 f0       	breq	.+30     	; 0x4ea <vfprintf+0x8a>
 4cc:	83 32       	cpi	r24, 0x23	; 35
 4ce:	a1 f4       	brne	.+40     	; 0x4f8 <vfprintf+0x98>
 4d0:	23 2d       	mov	r18, r3
 4d2:	20 61       	ori	r18, 0x10	; 16
 4d4:	1d c0       	rjmp	.+58     	; 0x510 <vfprintf+0xb0>
 4d6:	8d 32       	cpi	r24, 0x2D	; 45
 4d8:	61 f0       	breq	.+24     	; 0x4f2 <vfprintf+0x92>
 4da:	80 33       	cpi	r24, 0x30	; 48
 4dc:	69 f4       	brne	.+26     	; 0x4f8 <vfprintf+0x98>
 4de:	23 2d       	mov	r18, r3
 4e0:	21 60       	ori	r18, 0x01	; 1
 4e2:	16 c0       	rjmp	.+44     	; 0x510 <vfprintf+0xb0>
 4e4:	83 2d       	mov	r24, r3
 4e6:	82 60       	ori	r24, 0x02	; 2
 4e8:	38 2e       	mov	r3, r24
 4ea:	e3 2d       	mov	r30, r3
 4ec:	e4 60       	ori	r30, 0x04	; 4
 4ee:	3e 2e       	mov	r3, r30
 4f0:	2a c0       	rjmp	.+84     	; 0x546 <vfprintf+0xe6>
 4f2:	f3 2d       	mov	r31, r3
 4f4:	f8 60       	ori	r31, 0x08	; 8
 4f6:	1d c0       	rjmp	.+58     	; 0x532 <vfprintf+0xd2>
 4f8:	37 fc       	sbrc	r3, 7
 4fa:	2d c0       	rjmp	.+90     	; 0x556 <vfprintf+0xf6>
 4fc:	20 ed       	ldi	r18, 0xD0	; 208
 4fe:	28 0f       	add	r18, r24
 500:	2a 30       	cpi	r18, 0x0A	; 10
 502:	40 f0       	brcs	.+16     	; 0x514 <vfprintf+0xb4>
 504:	8e 32       	cpi	r24, 0x2E	; 46
 506:	b9 f4       	brne	.+46     	; 0x536 <vfprintf+0xd6>
 508:	36 fc       	sbrc	r3, 6
 50a:	81 c1       	rjmp	.+770    	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 50c:	23 2d       	mov	r18, r3
 50e:	20 64       	ori	r18, 0x40	; 64
 510:	32 2e       	mov	r3, r18
 512:	19 c0       	rjmp	.+50     	; 0x546 <vfprintf+0xe6>
 514:	36 fe       	sbrs	r3, 6
 516:	06 c0       	rjmp	.+12     	; 0x524 <vfprintf+0xc4>
 518:	8a e0       	ldi	r24, 0x0A	; 10
 51a:	98 9e       	mul	r9, r24
 51c:	20 0d       	add	r18, r0
 51e:	11 24       	eor	r1, r1
 520:	92 2e       	mov	r9, r18
 522:	11 c0       	rjmp	.+34     	; 0x546 <vfprintf+0xe6>
 524:	ea e0       	ldi	r30, 0x0A	; 10
 526:	2e 9e       	mul	r2, r30
 528:	20 0d       	add	r18, r0
 52a:	11 24       	eor	r1, r1
 52c:	22 2e       	mov	r2, r18
 52e:	f3 2d       	mov	r31, r3
 530:	f0 62       	ori	r31, 0x20	; 32
 532:	3f 2e       	mov	r3, r31
 534:	08 c0       	rjmp	.+16     	; 0x546 <vfprintf+0xe6>
 536:	8c 36       	cpi	r24, 0x6C	; 108
 538:	21 f4       	brne	.+8      	; 0x542 <vfprintf+0xe2>
 53a:	83 2d       	mov	r24, r3
 53c:	80 68       	ori	r24, 0x80	; 128
 53e:	38 2e       	mov	r3, r24
 540:	02 c0       	rjmp	.+4      	; 0x546 <vfprintf+0xe6>
 542:	88 36       	cpi	r24, 0x68	; 104
 544:	41 f4       	brne	.+16     	; 0x556 <vfprintf+0xf6>
 546:	f7 01       	movw	r30, r14
 548:	93 fd       	sbrc	r25, 3
 54a:	85 91       	lpm	r24, Z+
 54c:	93 ff       	sbrs	r25, 3
 54e:	81 91       	ld	r24, Z+
 550:	7f 01       	movw	r14, r30
 552:	81 11       	cpse	r24, r1
 554:	b3 cf       	rjmp	.-154    	; 0x4bc <vfprintf+0x5c>
 556:	98 2f       	mov	r25, r24
 558:	9f 7d       	andi	r25, 0xDF	; 223
 55a:	95 54       	subi	r25, 0x45	; 69
 55c:	93 30       	cpi	r25, 0x03	; 3
 55e:	28 f4       	brcc	.+10     	; 0x56a <vfprintf+0x10a>
 560:	0c 5f       	subi	r16, 0xFC	; 252
 562:	1f 4f       	sbci	r17, 0xFF	; 255
 564:	9f e3       	ldi	r25, 0x3F	; 63
 566:	99 83       	std	Y+1, r25	; 0x01
 568:	0d c0       	rjmp	.+26     	; 0x584 <vfprintf+0x124>
 56a:	83 36       	cpi	r24, 0x63	; 99
 56c:	31 f0       	breq	.+12     	; 0x57a <vfprintf+0x11a>
 56e:	83 37       	cpi	r24, 0x73	; 115
 570:	71 f0       	breq	.+28     	; 0x58e <vfprintf+0x12e>
 572:	83 35       	cpi	r24, 0x53	; 83
 574:	09 f0       	breq	.+2      	; 0x578 <vfprintf+0x118>
 576:	59 c0       	rjmp	.+178    	; 0x62a <vfprintf+0x1ca>
 578:	21 c0       	rjmp	.+66     	; 0x5bc <vfprintf+0x15c>
 57a:	f8 01       	movw	r30, r16
 57c:	80 81       	ld	r24, Z
 57e:	89 83       	std	Y+1, r24	; 0x01
 580:	0e 5f       	subi	r16, 0xFE	; 254
 582:	1f 4f       	sbci	r17, 0xFF	; 255
 584:	88 24       	eor	r8, r8
 586:	83 94       	inc	r8
 588:	91 2c       	mov	r9, r1
 58a:	53 01       	movw	r10, r6
 58c:	13 c0       	rjmp	.+38     	; 0x5b4 <vfprintf+0x154>
 58e:	28 01       	movw	r4, r16
 590:	f2 e0       	ldi	r31, 0x02	; 2
 592:	4f 0e       	add	r4, r31
 594:	51 1c       	adc	r5, r1
 596:	f8 01       	movw	r30, r16
 598:	a0 80       	ld	r10, Z
 59a:	b1 80       	ldd	r11, Z+1	; 0x01
 59c:	36 fe       	sbrs	r3, 6
 59e:	03 c0       	rjmp	.+6      	; 0x5a6 <vfprintf+0x146>
 5a0:	69 2d       	mov	r22, r9
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	02 c0       	rjmp	.+4      	; 0x5aa <vfprintf+0x14a>
 5a6:	6f ef       	ldi	r22, 0xFF	; 255
 5a8:	7f ef       	ldi	r23, 0xFF	; 255
 5aa:	c5 01       	movw	r24, r10
 5ac:	0e 94 1c 04 	call	0x838	; 0x838 <strnlen>
 5b0:	4c 01       	movw	r8, r24
 5b2:	82 01       	movw	r16, r4
 5b4:	f3 2d       	mov	r31, r3
 5b6:	ff 77       	andi	r31, 0x7F	; 127
 5b8:	3f 2e       	mov	r3, r31
 5ba:	16 c0       	rjmp	.+44     	; 0x5e8 <vfprintf+0x188>
 5bc:	28 01       	movw	r4, r16
 5be:	22 e0       	ldi	r18, 0x02	; 2
 5c0:	42 0e       	add	r4, r18
 5c2:	51 1c       	adc	r5, r1
 5c4:	f8 01       	movw	r30, r16
 5c6:	a0 80       	ld	r10, Z
 5c8:	b1 80       	ldd	r11, Z+1	; 0x01
 5ca:	36 fe       	sbrs	r3, 6
 5cc:	03 c0       	rjmp	.+6      	; 0x5d4 <vfprintf+0x174>
 5ce:	69 2d       	mov	r22, r9
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <vfprintf+0x178>
 5d4:	6f ef       	ldi	r22, 0xFF	; 255
 5d6:	7f ef       	ldi	r23, 0xFF	; 255
 5d8:	c5 01       	movw	r24, r10
 5da:	0e 94 11 04 	call	0x822	; 0x822 <strnlen_P>
 5de:	4c 01       	movw	r8, r24
 5e0:	f3 2d       	mov	r31, r3
 5e2:	f0 68       	ori	r31, 0x80	; 128
 5e4:	3f 2e       	mov	r3, r31
 5e6:	82 01       	movw	r16, r4
 5e8:	33 fc       	sbrc	r3, 3
 5ea:	1b c0       	rjmp	.+54     	; 0x622 <vfprintf+0x1c2>
 5ec:	82 2d       	mov	r24, r2
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	88 16       	cp	r8, r24
 5f2:	99 06       	cpc	r9, r25
 5f4:	b0 f4       	brcc	.+44     	; 0x622 <vfprintf+0x1c2>
 5f6:	b6 01       	movw	r22, r12
 5f8:	80 e2       	ldi	r24, 0x20	; 32
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 27 04 	call	0x84e	; 0x84e <fputc>
 600:	2a 94       	dec	r2
 602:	f4 cf       	rjmp	.-24     	; 0x5ec <vfprintf+0x18c>
 604:	f5 01       	movw	r30, r10
 606:	37 fc       	sbrc	r3, 7
 608:	85 91       	lpm	r24, Z+
 60a:	37 fe       	sbrs	r3, 7
 60c:	81 91       	ld	r24, Z+
 60e:	5f 01       	movw	r10, r30
 610:	b6 01       	movw	r22, r12
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 94 27 04 	call	0x84e	; 0x84e <fputc>
 618:	21 10       	cpse	r2, r1
 61a:	2a 94       	dec	r2
 61c:	21 e0       	ldi	r18, 0x01	; 1
 61e:	82 1a       	sub	r8, r18
 620:	91 08       	sbc	r9, r1
 622:	81 14       	cp	r8, r1
 624:	91 04       	cpc	r9, r1
 626:	71 f7       	brne	.-36     	; 0x604 <vfprintf+0x1a4>
 628:	e8 c0       	rjmp	.+464    	; 0x7fa <vfprintf+0x39a>
 62a:	84 36       	cpi	r24, 0x64	; 100
 62c:	11 f0       	breq	.+4      	; 0x632 <vfprintf+0x1d2>
 62e:	89 36       	cpi	r24, 0x69	; 105
 630:	41 f5       	brne	.+80     	; 0x682 <vfprintf+0x222>
 632:	f8 01       	movw	r30, r16
 634:	37 fe       	sbrs	r3, 7
 636:	07 c0       	rjmp	.+14     	; 0x646 <vfprintf+0x1e6>
 638:	60 81       	ld	r22, Z
 63a:	71 81       	ldd	r23, Z+1	; 0x01
 63c:	82 81       	ldd	r24, Z+2	; 0x02
 63e:	93 81       	ldd	r25, Z+3	; 0x03
 640:	0c 5f       	subi	r16, 0xFC	; 252
 642:	1f 4f       	sbci	r17, 0xFF	; 255
 644:	08 c0       	rjmp	.+16     	; 0x656 <vfprintf+0x1f6>
 646:	60 81       	ld	r22, Z
 648:	71 81       	ldd	r23, Z+1	; 0x01
 64a:	07 2e       	mov	r0, r23
 64c:	00 0c       	add	r0, r0
 64e:	88 0b       	sbc	r24, r24
 650:	99 0b       	sbc	r25, r25
 652:	0e 5f       	subi	r16, 0xFE	; 254
 654:	1f 4f       	sbci	r17, 0xFF	; 255
 656:	f3 2d       	mov	r31, r3
 658:	ff 76       	andi	r31, 0x6F	; 111
 65a:	3f 2e       	mov	r3, r31
 65c:	97 ff       	sbrs	r25, 7
 65e:	09 c0       	rjmp	.+18     	; 0x672 <vfprintf+0x212>
 660:	90 95       	com	r25
 662:	80 95       	com	r24
 664:	70 95       	com	r23
 666:	61 95       	neg	r22
 668:	7f 4f       	sbci	r23, 0xFF	; 255
 66a:	8f 4f       	sbci	r24, 0xFF	; 255
 66c:	9f 4f       	sbci	r25, 0xFF	; 255
 66e:	f0 68       	ori	r31, 0x80	; 128
 670:	3f 2e       	mov	r3, r31
 672:	2a e0       	ldi	r18, 0x0A	; 10
 674:	30 e0       	ldi	r19, 0x00	; 0
 676:	a3 01       	movw	r20, r6
 678:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__ultoa_invert>
 67c:	88 2e       	mov	r8, r24
 67e:	86 18       	sub	r8, r6
 680:	45 c0       	rjmp	.+138    	; 0x70c <vfprintf+0x2ac>
 682:	85 37       	cpi	r24, 0x75	; 117
 684:	31 f4       	brne	.+12     	; 0x692 <vfprintf+0x232>
 686:	23 2d       	mov	r18, r3
 688:	2f 7e       	andi	r18, 0xEF	; 239
 68a:	b2 2e       	mov	r11, r18
 68c:	2a e0       	ldi	r18, 0x0A	; 10
 68e:	30 e0       	ldi	r19, 0x00	; 0
 690:	25 c0       	rjmp	.+74     	; 0x6dc <vfprintf+0x27c>
 692:	93 2d       	mov	r25, r3
 694:	99 7f       	andi	r25, 0xF9	; 249
 696:	b9 2e       	mov	r11, r25
 698:	8f 36       	cpi	r24, 0x6F	; 111
 69a:	c1 f0       	breq	.+48     	; 0x6cc <vfprintf+0x26c>
 69c:	18 f4       	brcc	.+6      	; 0x6a4 <vfprintf+0x244>
 69e:	88 35       	cpi	r24, 0x58	; 88
 6a0:	79 f0       	breq	.+30     	; 0x6c0 <vfprintf+0x260>
 6a2:	b5 c0       	rjmp	.+362    	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 6a4:	80 37       	cpi	r24, 0x70	; 112
 6a6:	19 f0       	breq	.+6      	; 0x6ae <vfprintf+0x24e>
 6a8:	88 37       	cpi	r24, 0x78	; 120
 6aa:	21 f0       	breq	.+8      	; 0x6b4 <vfprintf+0x254>
 6ac:	b0 c0       	rjmp	.+352    	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 6ae:	e9 2f       	mov	r30, r25
 6b0:	e0 61       	ori	r30, 0x10	; 16
 6b2:	be 2e       	mov	r11, r30
 6b4:	b4 fe       	sbrs	r11, 4
 6b6:	0d c0       	rjmp	.+26     	; 0x6d2 <vfprintf+0x272>
 6b8:	fb 2d       	mov	r31, r11
 6ba:	f4 60       	ori	r31, 0x04	; 4
 6bc:	bf 2e       	mov	r11, r31
 6be:	09 c0       	rjmp	.+18     	; 0x6d2 <vfprintf+0x272>
 6c0:	34 fe       	sbrs	r3, 4
 6c2:	0a c0       	rjmp	.+20     	; 0x6d8 <vfprintf+0x278>
 6c4:	29 2f       	mov	r18, r25
 6c6:	26 60       	ori	r18, 0x06	; 6
 6c8:	b2 2e       	mov	r11, r18
 6ca:	06 c0       	rjmp	.+12     	; 0x6d8 <vfprintf+0x278>
 6cc:	28 e0       	ldi	r18, 0x08	; 8
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	05 c0       	rjmp	.+10     	; 0x6dc <vfprintf+0x27c>
 6d2:	20 e1       	ldi	r18, 0x10	; 16
 6d4:	30 e0       	ldi	r19, 0x00	; 0
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <vfprintf+0x27c>
 6d8:	20 e1       	ldi	r18, 0x10	; 16
 6da:	32 e0       	ldi	r19, 0x02	; 2
 6dc:	f8 01       	movw	r30, r16
 6de:	b7 fe       	sbrs	r11, 7
 6e0:	07 c0       	rjmp	.+14     	; 0x6f0 <vfprintf+0x290>
 6e2:	60 81       	ld	r22, Z
 6e4:	71 81       	ldd	r23, Z+1	; 0x01
 6e6:	82 81       	ldd	r24, Z+2	; 0x02
 6e8:	93 81       	ldd	r25, Z+3	; 0x03
 6ea:	0c 5f       	subi	r16, 0xFC	; 252
 6ec:	1f 4f       	sbci	r17, 0xFF	; 255
 6ee:	06 c0       	rjmp	.+12     	; 0x6fc <vfprintf+0x29c>
 6f0:	60 81       	ld	r22, Z
 6f2:	71 81       	ldd	r23, Z+1	; 0x01
 6f4:	80 e0       	ldi	r24, 0x00	; 0
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	0e 5f       	subi	r16, 0xFE	; 254
 6fa:	1f 4f       	sbci	r17, 0xFF	; 255
 6fc:	a3 01       	movw	r20, r6
 6fe:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__ultoa_invert>
 702:	88 2e       	mov	r8, r24
 704:	86 18       	sub	r8, r6
 706:	fb 2d       	mov	r31, r11
 708:	ff 77       	andi	r31, 0x7F	; 127
 70a:	3f 2e       	mov	r3, r31
 70c:	36 fe       	sbrs	r3, 6
 70e:	0d c0       	rjmp	.+26     	; 0x72a <vfprintf+0x2ca>
 710:	23 2d       	mov	r18, r3
 712:	2e 7f       	andi	r18, 0xFE	; 254
 714:	a2 2e       	mov	r10, r18
 716:	89 14       	cp	r8, r9
 718:	58 f4       	brcc	.+22     	; 0x730 <vfprintf+0x2d0>
 71a:	34 fe       	sbrs	r3, 4
 71c:	0b c0       	rjmp	.+22     	; 0x734 <vfprintf+0x2d4>
 71e:	32 fc       	sbrc	r3, 2
 720:	09 c0       	rjmp	.+18     	; 0x734 <vfprintf+0x2d4>
 722:	83 2d       	mov	r24, r3
 724:	8e 7e       	andi	r24, 0xEE	; 238
 726:	a8 2e       	mov	r10, r24
 728:	05 c0       	rjmp	.+10     	; 0x734 <vfprintf+0x2d4>
 72a:	b8 2c       	mov	r11, r8
 72c:	a3 2c       	mov	r10, r3
 72e:	03 c0       	rjmp	.+6      	; 0x736 <vfprintf+0x2d6>
 730:	b8 2c       	mov	r11, r8
 732:	01 c0       	rjmp	.+2      	; 0x736 <vfprintf+0x2d6>
 734:	b9 2c       	mov	r11, r9
 736:	a4 fe       	sbrs	r10, 4
 738:	0f c0       	rjmp	.+30     	; 0x758 <vfprintf+0x2f8>
 73a:	fe 01       	movw	r30, r28
 73c:	e8 0d       	add	r30, r8
 73e:	f1 1d       	adc	r31, r1
 740:	80 81       	ld	r24, Z
 742:	80 33       	cpi	r24, 0x30	; 48
 744:	21 f4       	brne	.+8      	; 0x74e <vfprintf+0x2ee>
 746:	9a 2d       	mov	r25, r10
 748:	99 7e       	andi	r25, 0xE9	; 233
 74a:	a9 2e       	mov	r10, r25
 74c:	09 c0       	rjmp	.+18     	; 0x760 <vfprintf+0x300>
 74e:	a2 fe       	sbrs	r10, 2
 750:	06 c0       	rjmp	.+12     	; 0x75e <vfprintf+0x2fe>
 752:	b3 94       	inc	r11
 754:	b3 94       	inc	r11
 756:	04 c0       	rjmp	.+8      	; 0x760 <vfprintf+0x300>
 758:	8a 2d       	mov	r24, r10
 75a:	86 78       	andi	r24, 0x86	; 134
 75c:	09 f0       	breq	.+2      	; 0x760 <vfprintf+0x300>
 75e:	b3 94       	inc	r11
 760:	a3 fc       	sbrc	r10, 3
 762:	11 c0       	rjmp	.+34     	; 0x786 <vfprintf+0x326>
 764:	a0 fe       	sbrs	r10, 0
 766:	06 c0       	rjmp	.+12     	; 0x774 <vfprintf+0x314>
 768:	b2 14       	cp	r11, r2
 76a:	88 f4       	brcc	.+34     	; 0x78e <vfprintf+0x32e>
 76c:	28 0c       	add	r2, r8
 76e:	92 2c       	mov	r9, r2
 770:	9b 18       	sub	r9, r11
 772:	0e c0       	rjmp	.+28     	; 0x790 <vfprintf+0x330>
 774:	b2 14       	cp	r11, r2
 776:	60 f4       	brcc	.+24     	; 0x790 <vfprintf+0x330>
 778:	b6 01       	movw	r22, r12
 77a:	80 e2       	ldi	r24, 0x20	; 32
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	0e 94 27 04 	call	0x84e	; 0x84e <fputc>
 782:	b3 94       	inc	r11
 784:	f7 cf       	rjmp	.-18     	; 0x774 <vfprintf+0x314>
 786:	b2 14       	cp	r11, r2
 788:	18 f4       	brcc	.+6      	; 0x790 <vfprintf+0x330>
 78a:	2b 18       	sub	r2, r11
 78c:	02 c0       	rjmp	.+4      	; 0x792 <vfprintf+0x332>
 78e:	98 2c       	mov	r9, r8
 790:	21 2c       	mov	r2, r1
 792:	a4 fe       	sbrs	r10, 4
 794:	10 c0       	rjmp	.+32     	; 0x7b6 <vfprintf+0x356>
 796:	b6 01       	movw	r22, r12
 798:	80 e3       	ldi	r24, 0x30	; 48
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	0e 94 27 04 	call	0x84e	; 0x84e <fputc>
 7a0:	a2 fe       	sbrs	r10, 2
 7a2:	17 c0       	rjmp	.+46     	; 0x7d2 <vfprintf+0x372>
 7a4:	a1 fc       	sbrc	r10, 1
 7a6:	03 c0       	rjmp	.+6      	; 0x7ae <vfprintf+0x34e>
 7a8:	88 e7       	ldi	r24, 0x78	; 120
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <vfprintf+0x352>
 7ae:	88 e5       	ldi	r24, 0x58	; 88
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	b6 01       	movw	r22, r12
 7b4:	0c c0       	rjmp	.+24     	; 0x7ce <vfprintf+0x36e>
 7b6:	8a 2d       	mov	r24, r10
 7b8:	86 78       	andi	r24, 0x86	; 134
 7ba:	59 f0       	breq	.+22     	; 0x7d2 <vfprintf+0x372>
 7bc:	a1 fe       	sbrs	r10, 1
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <vfprintf+0x364>
 7c0:	8b e2       	ldi	r24, 0x2B	; 43
 7c2:	01 c0       	rjmp	.+2      	; 0x7c6 <vfprintf+0x366>
 7c4:	80 e2       	ldi	r24, 0x20	; 32
 7c6:	a7 fc       	sbrc	r10, 7
 7c8:	8d e2       	ldi	r24, 0x2D	; 45
 7ca:	b6 01       	movw	r22, r12
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	0e 94 27 04 	call	0x84e	; 0x84e <fputc>
 7d2:	89 14       	cp	r8, r9
 7d4:	38 f4       	brcc	.+14     	; 0x7e4 <vfprintf+0x384>
 7d6:	b6 01       	movw	r22, r12
 7d8:	80 e3       	ldi	r24, 0x30	; 48
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	0e 94 27 04 	call	0x84e	; 0x84e <fputc>
 7e0:	9a 94       	dec	r9
 7e2:	f7 cf       	rjmp	.-18     	; 0x7d2 <vfprintf+0x372>
 7e4:	8a 94       	dec	r8
 7e6:	f3 01       	movw	r30, r6
 7e8:	e8 0d       	add	r30, r8
 7ea:	f1 1d       	adc	r31, r1
 7ec:	80 81       	ld	r24, Z
 7ee:	b6 01       	movw	r22, r12
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	0e 94 27 04 	call	0x84e	; 0x84e <fputc>
 7f6:	81 10       	cpse	r8, r1
 7f8:	f5 cf       	rjmp	.-22     	; 0x7e4 <vfprintf+0x384>
 7fa:	22 20       	and	r2, r2
 7fc:	09 f4       	brne	.+2      	; 0x800 <__DATA_REGION_LENGTH__>
 7fe:	42 ce       	rjmp	.-892    	; 0x484 <vfprintf+0x24>
 800:	b6 01       	movw	r22, r12
 802:	80 e2       	ldi	r24, 0x20	; 32
 804:	90 e0       	ldi	r25, 0x00	; 0
 806:	0e 94 27 04 	call	0x84e	; 0x84e <fputc>
 80a:	2a 94       	dec	r2
 80c:	f6 cf       	rjmp	.-20     	; 0x7fa <vfprintf+0x39a>
 80e:	f6 01       	movw	r30, r12
 810:	86 81       	ldd	r24, Z+6	; 0x06
 812:	97 81       	ldd	r25, Z+7	; 0x07
 814:	02 c0       	rjmp	.+4      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 816:	8f ef       	ldi	r24, 0xFF	; 255
 818:	9f ef       	ldi	r25, 0xFF	; 255
 81a:	2b 96       	adiw	r28, 0x0b	; 11
 81c:	e2 e1       	ldi	r30, 0x12	; 18
 81e:	0c 94 dd 04 	jmp	0x9ba	; 0x9ba <__epilogue_restores__>

00000822 <strnlen_P>:
 822:	fc 01       	movw	r30, r24
 824:	05 90       	lpm	r0, Z+
 826:	61 50       	subi	r22, 0x01	; 1
 828:	70 40       	sbci	r23, 0x00	; 0
 82a:	01 10       	cpse	r0, r1
 82c:	d8 f7       	brcc	.-10     	; 0x824 <strnlen_P+0x2>
 82e:	80 95       	com	r24
 830:	90 95       	com	r25
 832:	8e 0f       	add	r24, r30
 834:	9f 1f       	adc	r25, r31
 836:	08 95       	ret

00000838 <strnlen>:
 838:	fc 01       	movw	r30, r24
 83a:	61 50       	subi	r22, 0x01	; 1
 83c:	70 40       	sbci	r23, 0x00	; 0
 83e:	01 90       	ld	r0, Z+
 840:	01 10       	cpse	r0, r1
 842:	d8 f7       	brcc	.-10     	; 0x83a <strnlen+0x2>
 844:	80 95       	com	r24
 846:	90 95       	com	r25
 848:	8e 0f       	add	r24, r30
 84a:	9f 1f       	adc	r25, r31
 84c:	08 95       	ret

0000084e <fputc>:
 84e:	0f 93       	push	r16
 850:	1f 93       	push	r17
 852:	cf 93       	push	r28
 854:	df 93       	push	r29
 856:	fb 01       	movw	r30, r22
 858:	23 81       	ldd	r18, Z+3	; 0x03
 85a:	21 fd       	sbrc	r18, 1
 85c:	03 c0       	rjmp	.+6      	; 0x864 <fputc+0x16>
 85e:	8f ef       	ldi	r24, 0xFF	; 255
 860:	9f ef       	ldi	r25, 0xFF	; 255
 862:	2c c0       	rjmp	.+88     	; 0x8bc <fputc+0x6e>
 864:	22 ff       	sbrs	r18, 2
 866:	16 c0       	rjmp	.+44     	; 0x894 <fputc+0x46>
 868:	46 81       	ldd	r20, Z+6	; 0x06
 86a:	57 81       	ldd	r21, Z+7	; 0x07
 86c:	24 81       	ldd	r18, Z+4	; 0x04
 86e:	35 81       	ldd	r19, Z+5	; 0x05
 870:	42 17       	cp	r20, r18
 872:	53 07       	cpc	r21, r19
 874:	44 f4       	brge	.+16     	; 0x886 <fputc+0x38>
 876:	a0 81       	ld	r26, Z
 878:	b1 81       	ldd	r27, Z+1	; 0x01
 87a:	9d 01       	movw	r18, r26
 87c:	2f 5f       	subi	r18, 0xFF	; 255
 87e:	3f 4f       	sbci	r19, 0xFF	; 255
 880:	31 83       	std	Z+1, r19	; 0x01
 882:	20 83       	st	Z, r18
 884:	8c 93       	st	X, r24
 886:	26 81       	ldd	r18, Z+6	; 0x06
 888:	37 81       	ldd	r19, Z+7	; 0x07
 88a:	2f 5f       	subi	r18, 0xFF	; 255
 88c:	3f 4f       	sbci	r19, 0xFF	; 255
 88e:	37 83       	std	Z+7, r19	; 0x07
 890:	26 83       	std	Z+6, r18	; 0x06
 892:	14 c0       	rjmp	.+40     	; 0x8bc <fputc+0x6e>
 894:	8b 01       	movw	r16, r22
 896:	ec 01       	movw	r28, r24
 898:	fb 01       	movw	r30, r22
 89a:	00 84       	ldd	r0, Z+8	; 0x08
 89c:	f1 85       	ldd	r31, Z+9	; 0x09
 89e:	e0 2d       	mov	r30, r0
 8a0:	09 95       	icall
 8a2:	89 2b       	or	r24, r25
 8a4:	e1 f6       	brne	.-72     	; 0x85e <fputc+0x10>
 8a6:	d8 01       	movw	r26, r16
 8a8:	16 96       	adiw	r26, 0x06	; 6
 8aa:	8d 91       	ld	r24, X+
 8ac:	9c 91       	ld	r25, X
 8ae:	17 97       	sbiw	r26, 0x07	; 7
 8b0:	01 96       	adiw	r24, 0x01	; 1
 8b2:	17 96       	adiw	r26, 0x07	; 7
 8b4:	9c 93       	st	X, r25
 8b6:	8e 93       	st	-X, r24
 8b8:	16 97       	sbiw	r26, 0x06	; 6
 8ba:	ce 01       	movw	r24, r28
 8bc:	df 91       	pop	r29
 8be:	cf 91       	pop	r28
 8c0:	1f 91       	pop	r17
 8c2:	0f 91       	pop	r16
 8c4:	08 95       	ret

000008c6 <__ultoa_invert>:
 8c6:	fa 01       	movw	r30, r20
 8c8:	aa 27       	eor	r26, r26
 8ca:	28 30       	cpi	r18, 0x08	; 8
 8cc:	51 f1       	breq	.+84     	; 0x922 <__stack+0x23>
 8ce:	20 31       	cpi	r18, 0x10	; 16
 8d0:	81 f1       	breq	.+96     	; 0x932 <__stack+0x33>
 8d2:	e8 94       	clt
 8d4:	6f 93       	push	r22
 8d6:	6e 7f       	andi	r22, 0xFE	; 254
 8d8:	6e 5f       	subi	r22, 0xFE	; 254
 8da:	7f 4f       	sbci	r23, 0xFF	; 255
 8dc:	8f 4f       	sbci	r24, 0xFF	; 255
 8de:	9f 4f       	sbci	r25, 0xFF	; 255
 8e0:	af 4f       	sbci	r26, 0xFF	; 255
 8e2:	b1 e0       	ldi	r27, 0x01	; 1
 8e4:	3e d0       	rcall	.+124    	; 0x962 <__stack+0x63>
 8e6:	b4 e0       	ldi	r27, 0x04	; 4
 8e8:	3c d0       	rcall	.+120    	; 0x962 <__stack+0x63>
 8ea:	67 0f       	add	r22, r23
 8ec:	78 1f       	adc	r23, r24
 8ee:	89 1f       	adc	r24, r25
 8f0:	9a 1f       	adc	r25, r26
 8f2:	a1 1d       	adc	r26, r1
 8f4:	68 0f       	add	r22, r24
 8f6:	79 1f       	adc	r23, r25
 8f8:	8a 1f       	adc	r24, r26
 8fa:	91 1d       	adc	r25, r1
 8fc:	a1 1d       	adc	r26, r1
 8fe:	6a 0f       	add	r22, r26
 900:	71 1d       	adc	r23, r1
 902:	81 1d       	adc	r24, r1
 904:	91 1d       	adc	r25, r1
 906:	a1 1d       	adc	r26, r1
 908:	20 d0       	rcall	.+64     	; 0x94a <__stack+0x4b>
 90a:	09 f4       	brne	.+2      	; 0x90e <__stack+0xf>
 90c:	68 94       	set
 90e:	3f 91       	pop	r19
 910:	2a e0       	ldi	r18, 0x0A	; 10
 912:	26 9f       	mul	r18, r22
 914:	11 24       	eor	r1, r1
 916:	30 19       	sub	r19, r0
 918:	30 5d       	subi	r19, 0xD0	; 208
 91a:	31 93       	st	Z+, r19
 91c:	de f6       	brtc	.-74     	; 0x8d4 <__ultoa_invert+0xe>
 91e:	cf 01       	movw	r24, r30
 920:	08 95       	ret
 922:	46 2f       	mov	r20, r22
 924:	47 70       	andi	r20, 0x07	; 7
 926:	40 5d       	subi	r20, 0xD0	; 208
 928:	41 93       	st	Z+, r20
 92a:	b3 e0       	ldi	r27, 0x03	; 3
 92c:	0f d0       	rcall	.+30     	; 0x94c <__stack+0x4d>
 92e:	c9 f7       	brne	.-14     	; 0x922 <__stack+0x23>
 930:	f6 cf       	rjmp	.-20     	; 0x91e <__stack+0x1f>
 932:	46 2f       	mov	r20, r22
 934:	4f 70       	andi	r20, 0x0F	; 15
 936:	40 5d       	subi	r20, 0xD0	; 208
 938:	4a 33       	cpi	r20, 0x3A	; 58
 93a:	18 f0       	brcs	.+6      	; 0x942 <__stack+0x43>
 93c:	49 5d       	subi	r20, 0xD9	; 217
 93e:	31 fd       	sbrc	r19, 1
 940:	40 52       	subi	r20, 0x20	; 32
 942:	41 93       	st	Z+, r20
 944:	02 d0       	rcall	.+4      	; 0x94a <__stack+0x4b>
 946:	a9 f7       	brne	.-22     	; 0x932 <__stack+0x33>
 948:	ea cf       	rjmp	.-44     	; 0x91e <__stack+0x1f>
 94a:	b4 e0       	ldi	r27, 0x04	; 4
 94c:	a6 95       	lsr	r26
 94e:	97 95       	ror	r25
 950:	87 95       	ror	r24
 952:	77 95       	ror	r23
 954:	67 95       	ror	r22
 956:	ba 95       	dec	r27
 958:	c9 f7       	brne	.-14     	; 0x94c <__stack+0x4d>
 95a:	00 97       	sbiw	r24, 0x00	; 0
 95c:	61 05       	cpc	r22, r1
 95e:	71 05       	cpc	r23, r1
 960:	08 95       	ret
 962:	9b 01       	movw	r18, r22
 964:	ac 01       	movw	r20, r24
 966:	0a 2e       	mov	r0, r26
 968:	06 94       	lsr	r0
 96a:	57 95       	ror	r21
 96c:	47 95       	ror	r20
 96e:	37 95       	ror	r19
 970:	27 95       	ror	r18
 972:	ba 95       	dec	r27
 974:	c9 f7       	brne	.-14     	; 0x968 <__stack+0x69>
 976:	62 0f       	add	r22, r18
 978:	73 1f       	adc	r23, r19
 97a:	84 1f       	adc	r24, r20
 97c:	95 1f       	adc	r25, r21
 97e:	a0 1d       	adc	r26, r0
 980:	08 95       	ret

00000982 <__prologue_saves__>:
 982:	2f 92       	push	r2
 984:	3f 92       	push	r3
 986:	4f 92       	push	r4
 988:	5f 92       	push	r5
 98a:	6f 92       	push	r6
 98c:	7f 92       	push	r7
 98e:	8f 92       	push	r8
 990:	9f 92       	push	r9
 992:	af 92       	push	r10
 994:	bf 92       	push	r11
 996:	cf 92       	push	r12
 998:	df 92       	push	r13
 99a:	ef 92       	push	r14
 99c:	ff 92       	push	r15
 99e:	0f 93       	push	r16
 9a0:	1f 93       	push	r17
 9a2:	cf 93       	push	r28
 9a4:	df 93       	push	r29
 9a6:	cd b7       	in	r28, 0x3d	; 61
 9a8:	de b7       	in	r29, 0x3e	; 62
 9aa:	ca 1b       	sub	r28, r26
 9ac:	db 0b       	sbc	r29, r27
 9ae:	0f b6       	in	r0, 0x3f	; 63
 9b0:	f8 94       	cli
 9b2:	de bf       	out	0x3e, r29	; 62
 9b4:	0f be       	out	0x3f, r0	; 63
 9b6:	cd bf       	out	0x3d, r28	; 61
 9b8:	09 94       	ijmp

000009ba <__epilogue_restores__>:
 9ba:	2a 88       	ldd	r2, Y+18	; 0x12
 9bc:	39 88       	ldd	r3, Y+17	; 0x11
 9be:	48 88       	ldd	r4, Y+16	; 0x10
 9c0:	5f 84       	ldd	r5, Y+15	; 0x0f
 9c2:	6e 84       	ldd	r6, Y+14	; 0x0e
 9c4:	7d 84       	ldd	r7, Y+13	; 0x0d
 9c6:	8c 84       	ldd	r8, Y+12	; 0x0c
 9c8:	9b 84       	ldd	r9, Y+11	; 0x0b
 9ca:	aa 84       	ldd	r10, Y+10	; 0x0a
 9cc:	b9 84       	ldd	r11, Y+9	; 0x09
 9ce:	c8 84       	ldd	r12, Y+8	; 0x08
 9d0:	df 80       	ldd	r13, Y+7	; 0x07
 9d2:	ee 80       	ldd	r14, Y+6	; 0x06
 9d4:	fd 80       	ldd	r15, Y+5	; 0x05
 9d6:	0c 81       	ldd	r16, Y+4	; 0x04
 9d8:	1b 81       	ldd	r17, Y+3	; 0x03
 9da:	aa 81       	ldd	r26, Y+2	; 0x02
 9dc:	b9 81       	ldd	r27, Y+1	; 0x01
 9de:	ce 0f       	add	r28, r30
 9e0:	d1 1d       	adc	r29, r1
 9e2:	0f b6       	in	r0, 0x3f	; 63
 9e4:	f8 94       	cli
 9e6:	de bf       	out	0x3e, r29	; 62
 9e8:	0f be       	out	0x3f, r0	; 63
 9ea:	cd bf       	out	0x3d, r28	; 61
 9ec:	ed 01       	movw	r28, r26
 9ee:	08 95       	ret

000009f0 <_exit>:
 9f0:	f8 94       	cli

000009f2 <__stop_program>:
 9f2:	ff cf       	rjmp	.-2      	; 0x9f2 <__stop_program>
